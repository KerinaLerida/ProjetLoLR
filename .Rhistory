shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data(package = .packages(all.available = TRUE))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
library(plotly)
runApp()
runApp()
runApp()
runApp()
# Charger le package nÃ©cessaire
library(dplyr)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
villes_mapbox
# Carte
plot_geo(brazil_pop,
lon = ~long, lat = ~lat,
# texte au passage de la souris
text = ~pop_text,
# taille du marker selon la pop
marker = ~ list(size = sqrt(pop / 10000) + 1,
line = list(width = 0)),
# couleur selon le quartile
color = ~pop_quantile
) %>%
layout(geo = fond_carte, title = "Populations")
# Carte
plot_ly(france, split = ~name, color = ~provnum_ne) %>%
layout(showlegend = FALSE)
# Lancer l'application Shiny
shinyApp(ui = ui, server = server)
shiny::runApp()
runApp()
library(shiny); runApp('main.R')
runApp('main.R')
library(shiny); runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
library(shiny); runApp('main.R')
runApp('main.R')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
